const { model } = require('mongoose');
const Author = require('../models/author.model');

module.exports.sayHello = (req, res)=>{
    res.json({msg: "Hello Mongoose Modularized!!"})
}

module.exports.findAllAuthors = (req, res) => {
    console.log("running find all authors!!!")
    Author.find()
        .then(allAuthors => {
            //you can console.log here as well to debug if needed
            res.json({results: allAuthors})
        })
        .catch(err => res.json({ message: 'Something went wrong', error: err }));
}

module.exports.createAuthor = (req, res) => {
    console.log("Trying to create author!")
    console.log("req body", req.body)
    Author.create(req.body) //req.body represents the form info
        .then(newlyCreatedAuthor => res.json({ results: newlyCreatedAuthor }))
        .catch(err => res.json({ message: 'Something went wrong', error: err }));
}

module.exports.findOneAuthor = (req, res) => {
    Author.findOne({ _id: req.params.id })  //curly brackets indicate the id generated by mongoose _id and request parameters of the id
        .then( singleAuthor => {res.json({ results: singleAuthor })
        })
        .catch(err => res.json({ message: 'Something went wrong', error: err }));
}

module.exports.updateAuthor = (req, res)=>{
    Author.findOneAndUpdate({_id: req.params.id}, //which author to update
        req.body, {new: true, runValidators: true })
    //the runValidators updates the new info to in all routes
    .then(updatedAuthor=>{
        res.json({results: updatedAuthor})
    })
    .catch(err => res.json({ message: 'Something went wrong', error: err }))
}

module.exports.deleteAuthor = (req, res) => {
    Author.deleteOne({ _id: req.params.id })
        .then(deletedAuthor=>{
            res.json({results: deletedAuthor })
        })
        .catch(err => res.json({ message: 'Something went wrong', error: err }))
}